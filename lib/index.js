let activeEffect;const bucket=new WeakMap;function track(target,key){if(!activeEffect)return;let propStore=bucket.get(target);if(!propStore)bucket.set(target,propStore=new Map);let effectStore=propStore.get(key);if(!effectStore)propStore.set(key,effectStore=new Set);effectStore.add(activeEffect);propStore.set(key,effectStore);activeEffect.deps.push(effectStore)}function trigger(target,key){const propStore=bucket.get(target);if(!propStore)return;const effectStore=propStore.get(key);if(!effectStore)return;const runStore=new Set;effectStore.forEach(effect=>runStore.add(effect));runStore.forEach(effect=>effect())}export function observe(data){return new Proxy(data,{get(target,key){track(target,key);return target[key]},set(target,key,newValue){target[key]=newValue;trigger(target,key);return true}})}export function effect(fn){const effectFn=()=>{effectFn.deps.forEach(effectStore=>effectStore.clear());effectFn.deps=[];activeEffect=effectFn;fn()};effectFn.deps=[];effectFn()}